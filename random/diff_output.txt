diff --git a/majors/m2 b/majors/m2
index 46f72fc..b474a2e 100755
Binary files a/majors/m2 and b/majors/m2 differ
diff --git a/majors/m2.cpp b/majors/m2.cpp
index 7f99272..9197cbe 100644
--- a/majors/m2.cpp
+++ b/majors/m2.cpp
@@ -18,31 +18,23 @@ int main() {
     int base = 1;
     int exponent = 1;
     int choice;
-    int choice2;
+    int newChoice;
     int powerCalculation = 1;
         while (exponent != 0) {
             powerCalculation *= base; 
             exponent--;
         } 
-
-// range checker 
-// value to check, min acceptable value, max acceptable value
-int rangeChecker;
-while () {
-    if(base <= )
-}
-
-
+    int rangeChecker;
 
 
 
-
-
-// constants for menu choices
+// constants for menu choices, declared variables correspond to numbers.
     const int CHANGE_BASE = 1, CHANGE_EXPONENT = 2, DISPLAY_BASE = 3, EXIT_PROGRAM = 4; 
 
 
 // menu displayed to user
+
+while(true) {
     cout << "Power Menu: " << "\n";
         cout << " 1. Change base " << "\n";
         cout << " 2. Change Exponent " << "\n";
@@ -51,65 +43,71 @@ while () {
     cout << "Option? " << "\n";
     cin >> choice;
 
-// 
-if (choice == CHANGE_BASE) {
-    rangeChecker;
-    cout << "Enter a new base: " << "\n";
-    cin >> choice;
-    choice2 = base;
-    cout << "your new base is " << choice2;
-
-} else if (choice == CHANGE_EXPONENT) {
-    cout << "Enter a new exponent: " << "\n";
-    cin >> choice;
-    choice2 = exponent;
-    cout << "your new exponent is " << choice2;
-    
-} else if (choice == DISPLAY_BASE) {
-    printf("%s" "%d", "the power calculation is ", powerCalculation);
 
-} else if (choice == EXIT_PROGRAM) {
-    return 0;
-
-} else {
-    cout << "Invalid Entry" << "\n";
+//statement if user selects option 1. change base.
+    if (choice == CHANGE_BASE) {
+        cout << "Enter a new base: " << "\n";
+        cin >> newChoice;
+        base = newChoice;
+        if (base < 26) {
+            printf("%s" "%d", "your new base is: ", newChoice);
+        } else {
+            cout << "Value is out of range";
+            return false;
+
+        }
+
+    //statement if user selects option 2. change exponent.
+    } else if (choice == CHANGE_EXPONENT) {
+        cout << "Enter a new exponent: " << "\n";
+        cin >> newChoice;
+        exponent = newChoice;
+        if (newChoice < 6) {
+            printf("%s" "%d", "your new exponent is: ", newChoice);
+        } else {
+            cout << "Value is out of range ";
+            return false;
+        }
+        
+
+    //statement if users display base raised to exponent.
+    } else if (choice == DISPLAY_BASE) {
+        printf("%s" "%d", "the power calculation is ", powerCalculation);
+
+
+    //statement if user chooses the exit program.
+    } else if (choice == EXIT_PROGRAM) {
+        return 0;
+
+    //else statment if user selects any option other then 1,2,3,4
+    } else {
+        cout << "Invalid Entry" << "\n";
+
+        
+    }
 }
 
 
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-    #pragma warning(disable: 4996) 
-    int getNum(void){
-/* we will see in a later lecture how we can improve this code */ 
-    char record[121] = {0}; /* record stores the string */ 
-    int number = 0; 
-    /* NOTE to student: indent and brace this function consistent with 
-your others */ 
+//     #pragma warning(disable: 4996) 
+//     int getNum(void){
+// /* we will see in a later lecture how we can improve this code */ 
+//     char record[121] = {0}; /* record stores the string */ 
+//     int number = 0; 
+//     /* NOTE to student: indent and brace this function consistent with 
+// your others */ 
  
-    /* use fgets() to get a string from the keyboard */ 
-        fgets(record, 121, stdin); 
-    /* extract the number from the string; sscanf() returns a number  
-     * corresponding with the number of items it found in the string */ 
-        if( sscanf(record, "%d", &number) != 1 ) 
-        { 
-        /* if the user did not enter a number recognizable by  
-         * the system, set number to -1 */ 
-            number = -1; 
-        }    
-        return number; 
-}
+//     /* use fgets() to get a string from the keyboard */ 
+//         fgets(record, 121, stdin); 
+//     /* extract the number from the string; sscanf() returns a number  
+//      * corresponding with the number of items it found in the string */ 
+//         if( sscanf(record, "%d", &number) != 1 ) 
+//         { 
+//         /* if the user did not enter a number recognizable by  
+//          * the system, set number to -1 */ 
+//             number = -1; 
+//         }    
+//         return number; 
+// }
 
 }
 
diff --git a/majors/tempCodeRunnerFile.cpp b/majors/tempCodeRunnerFile.cpp
index 1c8a0e7..4255dc5 100644
--- a/majors/tempCodeRunnerFile.cpp
+++ b/majors/tempCodeRunnerFile.cpp
@@ -1 +1 @@
-;
\ No newline at end of file
+base = newChoice;
\ No newline at end of file
